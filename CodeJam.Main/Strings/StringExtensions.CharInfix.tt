<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="$(SolutionDir)Build\T4\Autogenerated.ttinclude" #><#@
include file="CharMethods.ttinclude" #>

using JetBrains.Annotations;

namespace CodeJam.Strings
{
	partial class StringExtensions
	{
<#foreach (var method in methods)
{
	GenerateIdxMethod(method.Name);
	if (method.NoIdx)
		GenerateNoIdxMethod(method.Name);
}#>
	}
}
<#+
		private void GenerateIdxMethod(string name) {#>
		/// <summary>
		/// Indicates whether the character at the specified position in a specified string is categorized as a <#=name.ToLower()#>.
		/// </summary>
		/// <param name="str">A string.</param>
		/// <param name="index">The position of the character to evaluate in <paramref name="str"/>.</param>
		/// <returns>
		/// <c>true</c> if the character at position <paramref name="index"/> in <paramref name="str"/> is a <#=name.ToLower()#>
		/// character; otherwise, <c>false</c>.
		/// </returns>
		[Pure]
		public static bool Is<#=name#>([NotNull] this string str, [NonNegativeValue] int index) => char.Is<#=name#>(str, index);

<#+}#>
<#+
		private void GenerateNoIdxMethod(string name) {#>
		/// <summary>
		/// Indicates whether all characters in a specified string is categorized as a <#=name.ToLower()#>.
		/// </summary>
		/// <param name="str">A string</param>
		/// <returns>
		/// <c>true</c> if all character in <paramref name="str"/> is a <#=name.ToLower()#>; otherwise, <c>false</c>.
		/// </returns>
		public static bool Is<#=name#>([NotNull] this string str)
		{
			Code.NotNull(str, nameof(str));

			foreach (var chr in str)
			{
				if (!chr.Is<#=name#>())
					return false;
			}
			return true;
		}

<#+}#>