<Project Sdk="Microsoft.NET.Sdk">

	<Import Project="..\..\Build\CodeJam.Default.props" />
	<Import Project="..\..\Build\CodeJam.Targeting.props" />

	<PropertyGroup>
		<AssemblyName>CodeJam</AssemblyName>
		<RootNamespace>CodeJam</RootNamespace>
		<ProjectGuid>{2F2046CC-FB47-4318-B335-5A82B04B6C40}</ProjectGuid>
		<EnableDefaultItems>false</EnableDefaultItems>
		<OutputType>Library</OutputType>
		<TargetFrameworks>net461;netcoreapp2.0;netstandard2.0;net472;net45;net40;net35</TargetFrameworks>

		<PackageId>CodeJam</PackageId>
		<Title>CodeJam library</Title>
		<Authors>Andrew Koryavchenko, Igor Sinicyn, Igor Tkachev, rameel</Authors>
		<Product>CodeJam</Product>
		<Description>CodeJam is a set of handy reusable .NET components that can simplify your daily work and save your time when you copy and paste your favorite helper methods and classes from one project to another.</Description>
		<PackageLicenseUrl>https://github.com/rsdn/CodeJam/blob/master/LICENSE</PackageLicenseUrl>
		<PackageProjectUrl>https://github.com/rsdn/CodeJam</PackageProjectUrl>
		<PackageIconUrl>https://raw.githubusercontent.com/rsdn/CodeJam/master/images/nuget/CodeJam.Main.Icon.png</PackageIconUrl>
		<PackageTags>list string collection data-structure threading xml reflection async assertion IO extension algorithms structures utilities suffix-tree range tagged-union discriminated union discriminated-union variant variant-record disjoint-union sum-type</PackageTags>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)' == 'Publish' ">
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)' != 'Publish'">
		<TargetFrameworks>net461</TargetFrameworks>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
		<DebugSymbols>true</DebugSymbols>
		<DebugType>full</DebugType>
		<Optimize>false</Optimize>
		<OutputPath>bin\Debug\</OutputPath>
		<DefineConstants>$(DefineConstants);TRACE;DEBUG</DefineConstants>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DocumentationFile>$(OutputPath)$(TargetFramework)\$(ProjectName).xml</DocumentationFile>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
		<DebugType>pdbonly</DebugType>
		<Optimize>true</Optimize>
		<OutputPath>bin\Release\</OutputPath>
		<DefineConstants>$(DefineConstants);TRACE</DefineConstants>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DocumentationFile>$(OutputPath)$(TargetFramework)\$(ProjectName).xml</DocumentationFile>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Publish|AnyCPU' ">
		<DebugType>pdbonly</DebugType>
		<Optimize>true</Optimize>
		<OutputPath>bin\Publish\</OutputPath>
		<DefineConstants>$(DefineConstants);TRACE</DefineConstants>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DocumentationFile>$(OutputPath)$(TargetFramework)\$(ProjectName).xml</DocumentationFile>
	</PropertyGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net35'">
		<AssemblyAttribute Include="System.Runtime.Versioning.TargetFrameworkAttribute">
			<_Parameter1>.NETFramework,Version=v3.5</_Parameter1>
		</AssemblyAttribute>
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
		<PackageReference Include="System.ComponentModel.Annotations" Version="4.4.0" />
	</ItemGroup>
	<ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp2.0' ">
		<PackageReference Include="System.ComponentModel.Annotations" Version="4.4.0" />
		<PackageReference Include="System.ValueTuple" Version="4.4.0" />
	</ItemGroup>
	<ItemGroup Condition=" '$(TargetFramework)' == 'net472' ">
		<Reference Include="System.ComponentModel.DataAnnotations" />
	</ItemGroup>
	<ItemGroup Condition=" '$(TargetFramework)' == 'net461' ">
		<Reference Include="System.ComponentModel.DataAnnotations" />
		<PackageReference Include="System.ValueTuple" Version="4.5.0" />
	</ItemGroup>
	<ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
		<Reference Include="System.ComponentModel.DataAnnotations" />
		<PackageReference Include="System.ValueTuple" Version="4.4.0" />
	</ItemGroup>
	<ItemGroup Condition=" '$(TargetFramework)' == 'net40' ">
		<Reference Include="System.ComponentModel.DataAnnotations" />
	</ItemGroup>
	<ItemGroup Condition=" '$(TargetFramework)' == 'net35' ">
		<Reference Include="System.ComponentModel.DataAnnotations" />
		<PackageReference Include="TaskParallelLibrary" Version="1.0.2856.0" />
	</ItemGroup>

	<ItemGroup>
		<Compile Include="..\..\Build\Jetbrains.Annotations.cs">
			<Link>Properties\Jetbrains.Annotations.cs</Link>
		</Compile>
		<Compile Include="Algorithms\Algorithms.EqualRange.Comparer.cs" />
		<Compile Include="Algorithms\Algorithms.EqualRange.generated.cs">
			<DependentUpon>Algorithms.EqualRange.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<Compile Include="Algorithms\Algorithms.EqualRange.IComparable.cs" />
		<None Include="Algorithms\Algorithms.EqualRange.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Algorithms.EqualRange.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Algorithms\Algorithms.LowerBound.Comparer.cs" />
		<Compile Include="Algorithms\Algorithms.LowerBound.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>Algorithms.LowerBound.tt</DependentUpon>
		</Compile>
		<Compile Include="Algorithms\Algorithms.LowerBound.IComparable.cs" />
		<None Include="Algorithms\Algorithms.LowerBound.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Algorithms.LowerBound.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Algorithms\Algorithms.Memoize.cs" />
		<Compile Include="Algorithms\Algorithms.Memoize.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>Algorithms.Memoize.tt</DependentUpon>
		</Compile>
		<None Include="Algorithms\Algorithms.Memoize.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Algorithms.Memoize.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Algorithms\Algorithms.PartitionPoint.cs" />
		<Compile Include="Algorithms\Algorithms.Swap.cs" />
		<Compile Include="Algorithms\Algorithms.UpperBound.Comparer.cs" />
		<Compile Include="Algorithms\Algorithms.UpperBound.generated.cs">
			<DependentUpon>Algorithms.UpperBound.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<Compile Include="Algorithms\Algorithms.UpperBound.IComparable.cs" />
		<None Include="Algorithms\Algorithms.UpperBound.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Algorithms.UpperBound.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Algorithms\HashCode.cs" />
		<Compile Include="Arithmetic\NamespaceDoc.cs" />
		<Compile Include="Arithmetic\Operators.cs" />
		<Compile Include="Arithmetic\Operators.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>Operators.tt</DependentUpon>
		</Compile>
		<None Include="Arithmetic\Operators.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Operators.generated.cs</LastGenOutput>
		</None>
		<None Include="Arithmetic\Operators.ttinclude" />
		<Compile Include="Arithmetic\OperatorsFactory.cs" />
		<Compile Include="Assertions\Code.cs" />
		<Compile Include="Assertions\Code.NonDebug.cs" />
		<Compile Include="Assertions\CodeExceptions.cs" />
		<Compile Include="Assertions\DebugCode.cs" />
		<Compile Include="Assertions\DebugCode.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>DebugCode.tt</DependentUpon>
		</Compile>
		<None Include="Assertions\DebugCode.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>DebugCode.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Assertions\DebugEnumCode.generated.cs">
			<DependentUpon>DebugEnumCode.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Assertions\DebugEnumCode.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>DebugEnumCode.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Assertions\DebugUriCode.generated.cs">
			<DependentUpon>DebugUriCode.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Assertions\DebugUriCode.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>DebugUriCode.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Assertions\EnumCode.cs" />
		<Compile Include="Assertions\EnumCodeExceptions.cs" />
		<Compile Include="Assertions\UriCode.cs" />
		<Compile Include="Assertions\UriCodeExceptions.cs" />
		<Compile Include="Collections\Array\Array.cs" />
		<Compile Include="Collections\Array\ArrayExtensions.cs" />
		<Compile Include="Collections\Array\ArrayExtensions.generated.cs">
			<DependentUpon>ArrayExtensions.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<Compile Include="Collections\Array\ArrayExtensions.Infix.cs" />
		<None Include="Collections\Array\ArrayExtensions.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>ArrayExtensions.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Collections\Dictionary\DictionaryExtensions.cs" />
		<Compile Include="Collections\Dictionary\DictionaryExtensions.GetValueOrDefault.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>DictionaryExtensions.GetValueOrDefault.tt</DependentUpon>
		</Compile>
		<None Include="Collections\Dictionary\DictionaryExtensions.GetValueOrDefault.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>DictionaryExtensions.GetValueOrDefault.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Collections\Dictionary\ILazyDictionary.cs" />
		<Compile Include="Collections\Dictionary\KeyEqualityComparer.cs" />
		<Compile Include="Collections\Dictionary\KeyEqualityComparer`1.cs" />
		<Compile Include="Collections\Dictionary\LazyDictionary.cs" />
		<Compile Include="Collections\Dictionary\LazyDictionary`2.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.AggregateOrDefault.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.Flatten.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.Grouping.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.GroupWhile.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.MinMaxBy.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.MinMaxBy.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>EnumerableExtensions.MinMaxBy.tt</DependentUpon>
		</Compile>
		<None Include="Collections\Enumerable\EnumerableExtensions.MinMaxBy.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>EnumerableExtensions.MinMaxBy.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Collections\Enumerable\EnumerableExtensions.MinMaxOrDefault.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.Page.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.SkipLast.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.Slice.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.Split.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.TakeLast.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.ToDictionary.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.TopoSort.cs" />
		<Compile Include="Collections\Enumerable\EnumerableExtensions.With.cs" />
		<Compile Include="Collections\Enumerable\IndexedItem.cs" />
		<Compile Include="Collections\OwnedCollections\OwnedCollection.cs" />
		<Compile Include="Collections\OwnedCollections\OwnedCollectionBase`2.cs" />
		<Compile Include="Collections\OwnedCollections\OwnedCollection`2.cs" />
		<Compile Include="Collections\SuffixTree\Suffix.cs" />
		<Compile Include="Collections\SuffixTree\SuffixTree.cs" />
		<Compile Include="Collections\SuffixTree\SuffixTreeBase.cs" />
		<Compile Include="Collections\CollectionExtensions.cs" />
		<Compile Include="Collections\ComparerBuilder.cs" />
		<Compile Include="Collections\IntervalTree.cs" />
		<Compile Include="Collections\NamespaceDoc.cs" />
		<Compile Include="Collections\QueryableExtensions.ApplyOrder.cs" />
		<Compile Include="Collections\QueryableExtensions.cs" />
		<Compile Include="Collections\QueryableExtensions.Ranges.cs" />
		<Compile Include="Collections\Sequence.cs" />
		<Compile Include="Dates\DateTimeExtensions.cs" />
		<Compile Include="Dates\DateTimeExtensions.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>DateTimeExtensions.tt</DependentUpon>
		</Compile>
		<Compile Include="Dates\DateTimeExtensions.NonGenerated.cs" />
		<None Include="Dates\DateTimeExtensions.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>DateTimeExtensions.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Dates\DateTimeRangeExtensions.cs" />
		<Compile Include="Dates\DateTimeRangeExtensions.generated.cs">
			<DependentUpon>DateTimeRangeExtensions.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<Compile Include="Dates\DateTimeRangeExtensions.NonGenerated.cs" />
		<None Include="Dates\DateTimeRangeExtensions.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>DateTimeRangeExtensions.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Dates\NamespaceDoc.cs" />
		<Compile Include="Expressions\Expr.generated.cs">
			<DependentUpon>ExpressionHelper.Func.tt</DependentUpon>
			<AutoGen>True</AutoGen>
			<DependentUpon>Expr.tt</DependentUpon>
		</Compile>
		<None Include="Expressions\Expr.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Expr.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Expressions\ExpressionExtensions.cs" />
		<Compile Include="Expressions\ExpressionExtensions.GetMembers.cs" />
		<Compile Include="Expressions\NamespaceDoc.cs" />
		<Compile Include="IO\DebugIoCode.generated.cs">
			<DependentUpon>DebugIoCode.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="IO\DebugIoCode.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>DebugIoCode.generated.cs</LastGenOutput>
		</None>
		<Compile Include="IO\IoCode.cs" />
		<Compile Include="IO\IoCodeExceptions.cs" />
		<Compile Include="IO\NamespaceDoc.cs" />
		<Compile Include="IO\PathHelpers.cs" />
		<Compile Include="IO\TempData.cs" />
		<Compile Include="Properties\AssemblyInfo.cs" />
		<Compile Include="Ranges\[Boundaries]\RangeBoundary.Operators.generated.cs">
			<DependentUpon>RangeBoundary.Operators.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Ranges\[Boundaries]\RangeBoundary.Operators.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>RangeBoundary.Operators.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Ranges\[Boundaries]\RangeBoundaryFrom`1.cs" />
		<Compile Include="Ranges\[Boundaries]\RangeBoundaryKind.cs" />
		<None Include="Ranges\[Boundaries]\RangeBoundaryToReplacer.ttinclude" />
		<Compile Include="Ranges\[Boundaries]\RangeBoundaryTo`1.generated.cs">
			<DependentUpon>RangeBoundaryTo`1.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Ranges\[Boundaries]\RangeBoundaryTo`1.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>RangeBoundaryTo`1.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Ranges\[CompositeRanges]\CompositeRange`1.cs" />
		<Compile Include="Ranges\[CompositeRanges]\CompositeRange`1.NonGenerated.cs" />
		<Compile Include="Ranges\[CompositeRanges]\CompositeRange`1.Operations.cs" />
		<Compile Include="Ranges\[CompositeRanges]\CompositeRange`2.generated.cs">
			<DependentUpon>CompositeRange`2.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<Compile Include="Ranges\[CompositeRanges]\CompositeRange`2.NonGenerated.cs" />
		<Compile Include="Ranges\[CompositeRanges]\CompositeRange`2.Operations.generated.cs">
		  <DependentUpon>CompositeRange`2.Operations.tt</DependentUpon>
		  <AutoGen>True</AutoGen>
		</Compile>
		<None Include="Ranges\[CompositeRanges]\CompositeRange`2.Operations.tt">
		  <LastGenOutput>CompositeRange`2.Operations.generated.cs</LastGenOutput>
		  <Generator>TextTemplatingFileGenerator</Generator>
		</None>
		<None Include="Ranges\[CompositeRanges]\CompositeRange`2.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>CompositeRange`2.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Ranges\[Helper types]\RangeBoundaryToDescendingComparer`1.cs" />
		<Compile Include="Ranges\[Helper types]\RangeIntersection`1.cs" />
		<Compile Include="Ranges\[Helper types]\RangeIntersection`2.generated.cs">
			<DependentUpon>RangeIntersection`2.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Ranges\[Helper types]\RangeIntersection`2.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>RangeIntersection`2.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Ranges\[RangeExtensions]\CompositeRangeExtensions.cs" />
		<Compile Include="Ranges\[RangeExtensions]\CompositeRangeExtensions.NoKey.cs" />
		<Compile Include="Ranges\[RangeExtensions]\CompositeRangeExtensions.WithKey.generated.cs">
			<DependentUpon>CompositeRangeExtensions.WithKey.tt</DependentUpon>
			<AutoGen>True</AutoGen>
			<DesignTime>True</DesignTime>
		</Compile>
		<None Include="Ranges\[RangeExtensions]\CompositeRangeExtensions.WithKey.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>CompositeRangeExtensions.WithKey.generated.cs</LastGenOutput>
		</None>
		<None Include="Ranges\[Ranges]\RangeWithTKeyReplacer.ttinclude" />
		<Compile Include="Ranges\[Ranges]\Range`1.cs" />
		<Compile Include="Ranges\[Ranges]\Range`1.NonGenerated.cs" />
		<Compile Include="Ranges\[Ranges]\Range`1.Operations.cs" />
		<Compile Include="Ranges\[Ranges]\Range`2.generated.cs">
			<DependentUpon>Range`2.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<Compile Include="Ranges\[Ranges]\Range`2.NonGenerated.cs" />
		<Compile Include="Ranges\[Ranges]\Range`2.Operations.generated.cs">
		  <DependentUpon>Range`2.Operations.tt</DependentUpon>
		  <AutoGen>True</AutoGen>
		  <DesignTime>True</DesignTime>
		</Compile>
		<None Include="Ranges\[Ranges]\Range`2.Operations.tt">
		  <LastGenOutput>Range`2.Operations.generated.cs</LastGenOutput>
		  <Generator>TextTemplatingFileGenerator</Generator>
		</None>
		<None Include="Ranges\[Ranges]\Range`2.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Range`2.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Ranges\CompositeRange.cs" />
		<Compile Include="Ranges\CompositeRange.generated.cs">
			<DependentUpon>CompositeRange.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Ranges\CompositeRange.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>CompositeRange.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Ranges\CompositeRangeInternal.cs" />
		<Compile Include="Ranges\NamespaceDoc.cs" />
		<Compile Include="Ranges\Range.cs" />
		<Compile Include="Ranges\Range.FactoryMethods.cs" />
		<Compile Include="Ranges\Range.FactoryMethods.generated.cs">
			<DependentUpon>Range.FactoryMethods.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Ranges\Range.FactoryMethods.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Range.FactoryMethods.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Ranges\RangeInternal.cs" />
		<None Include="Ranges\RangesPlannedChanges.md" />
		<Compile Include="Reflection\AssemblyExtensions.cs" />
		<Compile Include="Reflection\InfoOf.cs" />
		<Compile Include="Reflection\InfoOf`1.cs" />
		<Compile Include="Reflection\MemberAccessor.cs" />
		<Compile Include="Reflection\NamespaceDoc.cs" />
		<Compile Include="Reflection\ParamInfo.cs" />
		<Compile Include="Reflection\ReflectionEnumHelper.cs" />
		<Compile Include="Reflection\ReflectionExtensions.CreateInstance.cs" />
		<Compile Include="Reflection\ReflectionExtensions.cs" />
		<Compile Include="Reflection\ReflectionExtensions.MetadataAttributes.cs" />
		<Compile Include="Reflection\TypeAccessor.cs" />
		<Compile Include="Reflection\TypeAccessorT.cs" />
		<Compile Include="Strings\CharExtensions.cs" />
		<Compile Include="Strings\CharExtensions.Infix.generated.cs">
			<DependentUpon>CharExtensions.Infix.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Strings\CharExtensions.Infix.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>CharExtensions.Infix.generated.cs</LastGenOutput>
		</None>
		<None Include="Strings\CharMethods.ttinclude" />
		<Compile Include="Strings\NamespaceDoc.cs" />
		<Compile Include="Strings\NaturalOrderStringComparer.cs" />
		<Compile Include="Strings\StringExtensions.CharInfix.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>StringExtensions.CharInfix.tt</DependentUpon>
		</Compile>
		<None Include="Strings\StringExtensions.CharInfix.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>StringExtensions.CharInfix.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Strings\StringExtensions.cs" />
		<Compile Include="Strings\StringExtensions.Infix.cs" />
		<Compile Include="Strings\StringExtensions.ToXxx.cs" />
		<Compile Include="Strings\StringExtensions.ToXxx.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>StringExtensions.ToXxx.tt</DependentUpon>
		</Compile>
		<None Include="Strings\StringExtensions.ToXxx.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>StringExtensions.ToXxx.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Strings\StringOrigin.cs" />
		<Compile Include="Structures\OneOf\IOneOf.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>IOneOf.tt</DependentUpon>
		</Compile>
		<None Include="Structures\OneOf\IOneOf.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>IOneOf.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Structures\OneOf\OneOf.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>OneOf.tt</DependentUpon>
		</Compile>
		<None Include="Structures\OneOf\OneOf.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>OneOf.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Structures\OneOf\ValueOneOf.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>ValueOneOf.tt</DependentUpon>
		</Compile>
		<None Include="Structures\OneOf\ValueOneOf.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>ValueOneOf.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Structures\Option\IOption.cs" />
		<Compile Include="Structures\Option\Option.cs" />
		<Compile Include="Structures\Option\Option`1.cs" />
		<Compile Include="Structures\Option\ValueOption.cs" />
		<Compile Include="Structures\Option\ValueOption`1.cs" />
		<Compile Include="Targeting\NET35\Action.cs" />
		<Compile Include="Targeting\NET35\DisplayAttribute.cs" />
		<Compile Include="Targeting\NET35\EnumerableTargeting.cs" />
		<Compile Include="Targeting\NET35\EnumTargeting.cs" />
		<Compile Include="Targeting\NET35\Func.cs" />
		<Compile Include="Targeting\NET35\IStructuralComparable.cs" />
		<Compile Include="Targeting\NET35\IStructuralEquatable.cs" />
		<Compile Include="Targeting\NET35\LocalizableString.cs" />
		<Compile Include="Targeting\NET35\StringTargeting.cs" />
		<Compile Include="Targeting\NET35\TargetFrameworkAttribute.cs" />
		<Compile Include="Targeting\NET35\Tuple.cs" />
		<Compile Include="Targeting\NET35\Volatile.cs" />
		<Compile Include="Targeting\NET40\ValueTuple\TupleElementNamesAttribute.cs" />
		<Compile Include="Targeting\NET40\ValueTuple\TupleExtensions.cs" />
		<Compile Include="Targeting\NET40\ValueTuple\ValueTuple.cs" />
		<Compile Include="Targeting\NET40\CustomAttributeExtensions.cs" />
		<Compile Include="Targeting\NET40\DictionaryWithReadOnly.cs" />
		<Compile Include="Targeting\NET40\IReadOnlyCollection.cs" />
		<Compile Include="Targeting\NET40\IReadOnlyDictionary.cs" />
		<Compile Include="Targeting\NET40\IReadOnlyList.cs" />
		<Compile Include="Targeting\NET40\ListWithReadOnly.cs" />
		<Compile Include="Targeting\NET40\ReadOnlyCollectionWithReadOnly.cs" />
		<Compile Include="Targeting\PlatformDependent.cs" />
		<Compile Include="Threading\AsyncLock.cs" />
		<Compile Include="Threading\AsyncOperationHelper.cs" />
		<Compile Include="Threading\ConcurrentLazyDictionary.cs" />
		<Compile Include="Threading\ExecSyncConcurrentLazyDictionary.cs" />
		<Compile Include="Threading\InterlockedOperations.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>InterlockedOperations.tt</DependentUpon>
		</Compile>
		<None Include="Threading\InterlockedOperations.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>InterlockedOperations.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Threading\NamespaceDoc.cs" />
		<Compile Include="Threading\ParallelExtensions.cs" />
		<Compile Include="Threading\ParallelQueue.cs" />
		<Compile Include="Threading\ReaderWriterLockSlimExtensions.cs" />
		<Compile Include="Threading\TaskHelper.cs" />
		<Compile Include="Threading\TaskHelper.generated.cs">
			<AutoGen>True</AutoGen>
			<DependentUpon>TaskHelper.tt</DependentUpon>
		</Compile>
		<Compile Include="Threading\TaskHelper.Marker.cs" />
		<None Include="Threading\TaskHelper.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>TaskHelper.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Utilities\HGlobal.cs" />
		<Compile Include="Utilities\HGlobalScope.cs" />
		<Compile Include="Utilities\HGlobalScope`1.cs" />
		<Compile Include="Utilities\Memory.cs" />
		<Compile Include="Xml\NamespaceDoc.cs" />
		<Compile Include="Xml\XNodeExtensions.cs" />
		<Compile Include="Disposable.cs" />
		<Compile Include="DisposableExtensions.cs" />
		<Compile Include="EnumHelper.cs" />
		<Compile Include="EnumValue.cs" />
		<Compile Include="EnumValues.cs" />
		<Compile Include="ExceptionExtensions.cs" />
		<Compile Include="Fn.cs" />
		<Compile Include="Fn.generated.cs">
			<DependentUpon>Fn.tt</DependentUpon>
			<AutoGen>True</AutoGen>
		</Compile>
		<None Include="Fn.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Fn.generated.cs</LastGenOutput>
		</None>
		<Compile Include="Fn`1.cs" />
		<Compile Include="Lazy.cs" />
		<Compile Include="NamespaceDoc.cs" />
		<Compile Include="NullableHelper.cs" />
		<Compile Include="Objects.cs" />
		<Content Include="Readme.txt">
			<Pack>true</Pack>
			<PackagePath>Readme.txt</PackagePath>
		</Content>
		<Compile Include="UriHelper.cs" />
	</ItemGroup>

	<ItemGroup>
		<Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
	</ItemGroup>

	<!--<Target Name="TestMessage" BeforeTargets="Build">
		<Message Text="Hi!" Importance="high" />
		<Message Text="Building $(ProjectName) for $(TargetFramework). References:" Importance="high" />
		<Message Text="* %(Reference.Identity)" Importance="high" />
	</Target>-->
</Project>